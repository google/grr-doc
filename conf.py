# -*- coding: utf-8 -*-
#
# GRR documentation build configuration file, created by
# sphinx-quickstart on Wed Nov 22 17:54:03 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'myst_parser',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'GRR'
copyright = u'2021, GRR team'
author = u'GRR team'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u''
# The full version, including alpha/beta/rc tags.
release = u''

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_static_path = []
html_theme_options = {
  # Toc options
  'collapse_navigation': True,
  'sticky_navigation': True,
  'navigation_depth': 4,
  'includehidden': True,
  'titles_only': True,
}

# Output file base name for HTML help builder.
htmlhelp_basename = 'GRRdoc'


# Configure sphinx to replace predefined version variables.
from docutils import nodes, transforms

class ProcessLink(transforms.Transform):

    default_priority = 1000

    text_replacements = {
        "__GRR_VERSION__": "3.4.6.7",
        "__GRR_DEB_VERSION__": "3.4.6-7",
        "__FLEETSPEAK_PIP_VERSION__": "0.1.11"
    }

    def find_replace(self, node):
        if isinstance(node, nodes.Text):
            for k, v in self.text_replacements.items():
                if k in node.astext():
                    repl = nodes.Text(node.replace(k, v))
                    node.parent.replace(node, repl)

        return node

    def traverse(self, node):
        """Traverse the document tree rooted at node.
        node : docutil node
            current root node to traverse
        """
        self.find_replace(node)

        for c in node.children:
            self.traverse(c)

    def apply(self):
        self.current_level = 0
        self.traverse(self.document)

def setup(app):
    app.add_transform(ProcessLink)
